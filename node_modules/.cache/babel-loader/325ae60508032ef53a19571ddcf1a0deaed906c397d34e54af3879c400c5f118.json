{"ast":null,"code":"var _jsxFileName = \"/Users/bandasaisivanagasyam/Documents/GitHub/DysleXanew/dyslexa-frontend/src/Pages/ExercisePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction stringSimilarity(str1, str2) {\n  str1 = str1.toLowerCase().trim();\n  str2 = str2.toLowerCase().trim();\n  let matches = 0;\n  const len = Math.max(str1.length, str2.length);\n  for (let i = 0; i < Math.min(str1.length, str2.length); i++) {\n    if (str1[i] === str2[i]) matches++;\n  }\n  return matches / len;\n}\nfunction ExercisePage() {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [recognizedText, setRecognizedText] = useState(\"\");\n  const [resultMsg, setResultMsg] = useState(\"📝 Ready to read!\");\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\n  const recognitionRef = useRef(null);\n  const videoRef = useRef(null);\n  const textRef = useRef(null);\n  const canvasRef = useRef(null);\n  const sentences = [\"This is the first sentence the user must read.\", \"IBM Watson can convert speech to text easily.\", \"Learning AI helps improve accessibility for everyone.\", \"React is a popular library for building web apps.\", \"Face API can detect emotions from video streams.\", \"Speech recognition can aid dyslexic users effectively.\", \"This is the last sentence to complete the hackathon demo.\"];\n\n  // Load face-api models\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = \"/models\"; // Ensure models are in public/models\n      await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\n      await faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL);\n      startCamera();\n    };\n    loadModels();\n  }, []);\n\n  // Start webcam with overlay\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {}\n      });\n      videoRef.current.srcObject = stream;\n      videoRef.current.addEventListener(\"loadedmetadata\", () => {\n        videoRef.current.play();\n      });\n      videoRef.current.addEventListener(\"playing\", () => {\n        // Ensure canvasRef.current is available from the JSX rendering\n        if (!canvasRef.current) {\n          console.error(\"Canvas element not found!\");\n          return;\n        }\n        const displaySize = {\n          width: videoRef.current.videoWidth,\n          height: videoRef.current.videoHeight\n        };\n        // Match dimensions of the canvas to the video element\n        faceapi.matchDimensions(canvasRef.current, displaySize);\n        setInterval(async () => {\n          const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceExpressions();\n          const resizedDetections = faceapi.resizeResults(detections, displaySize);\n          const ctx = canvasRef.current.getContext(\"2d\");\n          ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height); // Clear canvas\n\n          if (detections.length > 0) {\n            const expr = Object.entries(detections[0].expressions).reduce((a, b) => b[1] > a[1] ? b : a)[0];\n\n            // Overlay expression on top-left corner of the webcam feed\n            ctx.font = \"24px Arial\"; // Slightly larger for better visibility\n            ctx.fillStyle = \"red\";\n            ctx.fillText(expr.toUpperCase(), 10, 30); // Position within the video feed\n\n            // Background color for sentence\n            if (expr === \"neutral\") textRef.current.style.backgroundColor = \"#ffebcd\";else if (expr === \"happy\") textRef.current.style.backgroundColor = \"#b6fcd5\";else if (expr === \"sad\") textRef.current.style.backgroundColor = \"#f7c6c7\";else textRef.current.style.backgroundColor = \"#ffffff\";\n          } else {\n            // Optional: Clear expression text if no face is detected\n            ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n            textRef.current.style.backgroundColor = \"#ffffff\"; // Reset sentence background\n          }\n        }, 500);\n      });\n    } catch (err) {\n      console.error(\"Error accessing camera:\", err);\n    }\n  };\n\n  // STT functions (no changes here)\n  const startListening = () => {\n    if (!(\"webkitSpeechRecognition\" in window)) {\n      alert(\"Your browser does not support Speech Recognition\");\n      return;\n    }\n    const recognition = new window.webkitSpeechRecognition();\n    recognitionRef.current = recognition;\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = \"en-US\";\n    recognition.start();\n    setIsListening(true);\n    setResultMsg(\"🎤 Start reading the sentence!\");\n    let finalTranscript = \"\";\n    recognition.onresult = event => {\n      let interimTranscript = \"\";\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) finalTranscript += transcript + \" \";else interimTranscript += transcript;\n      }\n      setRecognizedText(finalTranscript + interimTranscript);\n    };\n    recognition.onend = async () => {\n      setIsListening(false);\n      const trimmedText = finalTranscript.trim();\n      const similarity = stringSimilarity(trimmedText, sentences[currentSentenceIndex]);\n      if (similarity < 0.85) {\n        setResultMsg(\"❌ Struggling. AI will read aloud!\");\n        try {\n          var _res$headers$get;\n          // TTS fetch from your server\n          const res = await fetch(\"http://127.0.0.1:5500/check\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              givenText: sentences[currentSentenceIndex],\n              recognizedText: trimmedText\n            })\n          });\n          if ((_res$headers$get = res.headers.get(\"content-type\")) !== null && _res$headers$get !== void 0 && _res$headers$get.includes(\"audio/wav\")) {\n            const blob = await res.blob();\n            const url = URL.createObjectURL(blob);\n            const audio = new Audio(url);\n            audio.play();\n          }\n        } catch (err) {\n          console.error(\"Error fetching TTS:\", err);\n        }\n      } else {\n        setResultMsg(\"✅ Correct! You can move to next sentence.\");\n      }\n    };\n  };\n  const stopListening = () => {\n    if (recognitionRef.current) recognitionRef.current.stop();\n    setIsListening(false);\n  };\n  const nextSentence = () => {\n    setCurrentSentenceIndex(prev => prev < sentences.length - 1 ? prev + 1 : 0);\n    setRecognizedText(\"\");\n    setResultMsg(\"📝 Ready to read!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      textAlign: \"center\",\n      position: \"relative\",\n      backgroundColor: \"red\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Read This Sentence Aloud:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      ref: textRef,\n      style: {\n        fontWeight: \"bold\",\n        fontSize: \"18px\",\n        padding: \"10px\",\n        borderRadius: \"8px\"\n      },\n      children: sentences[currentSentenceIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isListening ? stopListening : startListening,\n      children: isListening ? \"Stop Listening\" : \"Start Reading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextSentence,\n      style: {\n        marginLeft: \"10px\"\n      },\n      children: \"Next Sentence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recognized Speech:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: recognizedText || \"📝 You can start reading now!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Feedback:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: resultMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Webcam:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"480px\",\n        height: \"360px\",\n        margin: \"0 auto\",\n        border: \"2px solid #000\",\n        borderRadius: \"8px\",\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        width: \"480\",\n        height: \"360\",\n        autoPlay: true,\n        muted: true,\n        style: {\n          display: \"block\",\n          borderRadius: \"8px\",\n          position: \"absolute\",\n          top: 0,\n          left: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"480\" // Set canvas dimensions explicitly to match video\n        ,\n        height: \"360\",\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          zIndex: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(ExercisePage, \"kQ2+x4DMiG3crb0kBH7De8Zpa6w=\");\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","faceapi","jsxDEV","_jsxDEV","stringSimilarity","str1","str2","toLowerCase","trim","matches","len","Math","max","length","i","min","ExercisePage","_s","isListening","setIsListening","recognizedText","setRecognizedText","resultMsg","setResultMsg","currentSentenceIndex","setCurrentSentenceIndex","recognitionRef","videoRef","textRef","canvasRef","sentences","loadModels","MODEL_URL","nets","tinyFaceDetector","loadFromUri","faceExpressionNet","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","addEventListener","play","console","error","displaySize","width","videoWidth","height","videoHeight","matchDimensions","setInterval","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceExpressions","resizedDetections","resizeResults","ctx","getContext","clearRect","expr","Object","entries","expressions","reduce","a","b","font","fillStyle","fillText","toUpperCase","style","backgroundColor","err","startListening","window","alert","recognition","webkitSpeechRecognition","continuous","interimResults","lang","start","finalTranscript","onresult","event","interimTranscript","resultIndex","results","transcript","isFinal","onend","trimmedText","similarity","_res$headers$get","res","fetch","method","headers","body","JSON","stringify","givenText","get","includes","blob","url","URL","createObjectURL","audio","Audio","stopListening","stop","nextSentence","prev","padding","textAlign","position","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","fontWeight","fontSize","borderRadius","onClick","marginLeft","margin","border","overflow","autoPlay","muted","display","top","left","zIndex","_c","$RefreshReg$"],"sources":["/Users/bandasaisivanagasyam/Documents/GitHub/DysleXanew/dyslexa-frontend/src/Pages/ExercisePage.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport * as faceapi from \"face-api.js\";\n\nfunction stringSimilarity(str1, str2) {\n  str1 = str1.toLowerCase().trim();\n  str2 = str2.toLowerCase().trim();\n  let matches = 0;\n  const len = Math.max(str1.length, str2.length);\n  for (let i = 0; i < Math.min(str1.length, str2.length); i++) {\n    if (str1[i] === str2[i]) matches++;\n  }\n  return matches / len;\n}\n\nfunction ExercisePage() {\n  const [isListening, setIsListening] = useState(false);\n  const [recognizedText, setRecognizedText] = useState(\"\");\n  const [resultMsg, setResultMsg] = useState(\"📝 Ready to read!\");\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\n  const recognitionRef = useRef(null);\n  const videoRef = useRef(null);\n  const textRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const sentences = [\n    \"This is the first sentence the user must read.\",\n    \"IBM Watson can convert speech to text easily.\",\n    \"Learning AI helps improve accessibility for everyone.\",\n    \"React is a popular library for building web apps.\",\n    \"Face API can detect emotions from video streams.\",\n    \"Speech recognition can aid dyslexic users effectively.\",\n    \"This is the last sentence to complete the hackathon demo.\",\n  ];\n\n  // Load face-api models\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = \"/models\"; // Ensure models are in public/models\n      await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\n      await faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL);\n      startCamera();\n    };\n    loadModels();\n  }, []);\n\n  // Start webcam with overlay\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: {} });\n      videoRef.current.srcObject = stream;\n\n      videoRef.current.addEventListener(\"loadedmetadata\", () => {\n        videoRef.current.play();\n      });\n\n      videoRef.current.addEventListener(\"playing\", () => {\n        // Ensure canvasRef.current is available from the JSX rendering\n        if (!canvasRef.current) {\n          console.error(\"Canvas element not found!\");\n          return;\n        }\n\n        const displaySize = {\n          width: videoRef.current.videoWidth,\n          height: videoRef.current.videoHeight,\n        };\n        // Match dimensions of the canvas to the video element\n        faceapi.matchDimensions(canvasRef.current, displaySize);\n\n        setInterval(async () => {\n          const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceExpressions();\n\n          const resizedDetections = faceapi.resizeResults(detections, displaySize);\n          const ctx = canvasRef.current.getContext(\"2d\");\n          ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height); // Clear canvas\n\n          if (detections.length > 0) {\n            const expr = Object.entries(detections[0].expressions).reduce((a, b) => (b[1] > a[1] ? b : a))[0];\n\n            // Overlay expression on top-left corner of the webcam feed\n            ctx.font = \"24px Arial\"; // Slightly larger for better visibility\n            ctx.fillStyle = \"red\";\n            ctx.fillText(expr.toUpperCase(), 10, 30); // Position within the video feed\n\n            // Background color for sentence\n            if (expr === \"neutral\") textRef.current.style.backgroundColor = \"#ffebcd\";\n            else if (expr === \"happy\") textRef.current.style.backgroundColor = \"#b6fcd5\";\n            else if (expr === \"sad\") textRef.current.style.backgroundColor = \"#f7c6c7\";\n            else textRef.current.style.backgroundColor = \"#ffffff\";\n          } else {\n            // Optional: Clear expression text if no face is detected\n            ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n            textRef.current.style.backgroundColor = \"#ffffff\"; // Reset sentence background\n          }\n        }, 500);\n      });\n    } catch (err) {\n      console.error(\"Error accessing camera:\", err);\n    }\n  };\n\n  // STT functions (no changes here)\n  const startListening = () => {\n    if (!(\"webkitSpeechRecognition\" in window)) {\n      alert(\"Your browser does not support Speech Recognition\");\n      return;\n    }\n\n    const recognition = new window.webkitSpeechRecognition();\n    recognitionRef.current = recognition;\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = \"en-US\";\n\n    recognition.start();\n    setIsListening(true);\n    setResultMsg(\"🎤 Start reading the sentence!\");\n\n    let finalTranscript = \"\";\n\n    recognition.onresult = (event) => {\n      let interimTranscript = \"\";\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) finalTranscript += transcript + \" \";\n        else interimTranscript += transcript;\n      }\n      setRecognizedText(finalTranscript + interimTranscript);\n    };\n\n    recognition.onend = async () => {\n      setIsListening(false);\n      const trimmedText = finalTranscript.trim();\n      const similarity = stringSimilarity(trimmedText, sentences[currentSentenceIndex]);\n\n      if (similarity < 0.85) {\n        setResultMsg(\"❌ Struggling. AI will read aloud!\");\n        try {\n          // TTS fetch from your server\n          const res = await fetch(\"http://127.0.0.1:5500/check\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              givenText: sentences[currentSentenceIndex],\n              recognizedText: trimmedText,\n            }),\n          });\n          if (res.headers.get(\"content-type\")?.includes(\"audio/wav\")) {\n            const blob = await res.blob();\n            const url = URL.createObjectURL(blob);\n            const audio = new Audio(url);\n            audio.play();\n          }\n        } catch (err) {\n          console.error(\"Error fetching TTS:\", err);\n        }\n      } else {\n        setResultMsg(\"✅ Correct! You can move to next sentence.\");\n      }\n    };\n  };\n\n  const stopListening = () => {\n    if (recognitionRef.current) recognitionRef.current.stop();\n    setIsListening(false);\n  };\n\n  const nextSentence = () => {\n    setCurrentSentenceIndex((prev) => (prev < sentences.length - 1 ? prev + 1 : 0));\n    setRecognizedText(\"\");\n    setResultMsg(\"📝 Ready to read!\");\n  };\n\n  return (\n    <div style={{ padding: \"20px\", textAlign: \"center\", position: \"relative\", backgroundColor: \"red\" }}>\n      <h2>Read This Sentence Aloud:</h2>\n      <p\n        ref={textRef}\n        style={{\n          fontWeight: \"bold\",\n          fontSize: \"18px\",\n          padding: \"10px\",\n          borderRadius: \"8px\",\n        }}\n      >\n        {sentences[currentSentenceIndex]}\n      </p>\n\n      <button onClick={isListening ? stopListening : startListening}>{isListening ? \"Stop Listening\" : \"Start Reading\"}</button>\n      <button onClick={nextSentence} style={{ marginLeft: \"10px\" }}>\n        Next Sentence\n      </button>\n\n      <h3>Recognized Speech:</h3>\n      <p>{recognizedText || \"📝 You can start reading now!\"}</p>\n\n      <h3>Feedback:</h3>\n      <p>{resultMsg}</p>\n\n      <h3>Webcam:</h3>\n      {/* This container will hold both the video and the canvas */}\n      <div\n        style={{\n          position: \"relative\",\n          width: \"480px\",\n          height: \"360px\",\n          margin: \"0 auto\",\n          border: \"2px solid #000\",\n          borderRadius: \"8px\",\n          overflow: \"hidden\",\n        }}\n      >\n        <video\n          ref={videoRef}\n          width=\"480\"\n          height=\"360\"\n          autoPlay\n          muted\n          style={{ display: \"block\", borderRadius: \"8px\", position: \"absolute\", top: 0, left: 0 }}\n        ></video>\n        {/* The canvas is now rendered directly within the same div */}\n        <canvas\n          ref={canvasRef}\n          width=\"480\" // Set canvas dimensions explicitly to match video\n          height=\"360\"\n          style={{ position: \"absolute\", top: 0, left: 0, zIndex: 10 }}\n        ></canvas>\n      </div>\n    </div>\n  );\n}\n\nexport default ExercisePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}